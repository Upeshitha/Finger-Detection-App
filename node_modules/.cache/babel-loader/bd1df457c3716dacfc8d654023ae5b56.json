{"ast":null,"code":"// Points for fingers\nconst fingerJoints = {\n  thumb: [0, 1, 2, 3, 4],\n  indexFinger: [0, 5, 6, 7, 8],\n  middleFinger: [0, 9, 10, 11, 12],\n  ringFinger: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20]\n}; //drawing function\n\nexport const drawHand = (predictions, ctx) => {\n  //Check if we have predictions\n  if (predictions.length > 0) {\n    //loop through each prediction\n    predictions.forEach(prediction => {\n      //grab landmarks\n      const landmarks = prediction.landmarks; // Loop through fingers\n\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\n        let finger = Object.keys(fingerJoints)[j]; //  Loop through pairs of joints\n\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\n          // Get pairs of joints\n          const firstJointIndex = fingerJoints[finger][k];\n          const secondJointIndex = fingerJoints[finger][k + 1]; // Draw path\n\n          ctx.beginPath();\n          ctx.moveTo(landmarks[firstJointIndex][0], landmarks[firstJointIndex][1]);\n          ctx.lineTo(landmarks[secondJointIndex][0], landmarks[secondJointIndex][1]);\n          ctx.strokeStyle = \"plum\";\n          ctx.lineWidth = 4;\n          ctx.stroke();\n        }\n      } //Loop through landmarks and draw em\n\n\n      for (let i = 0; i < landmarks.length; i++) {\n        //Get x points\n        const x = landmarks[i][0]; //Get y points\n\n        const y = landmarks[i][1]; //start drawing\n\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, 3 * Math.PI); //set line color\n\n        ctx.fillStyle = \"aqua\";\n        ctx.fill();\n      }\n    });\n  }\n};","map":{"version":3,"sources":["E:/User/Documents/HCI Web/POSE Estimation/handpose/src/utilities.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill"],"mappings":"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","sourcesContent":["// Points for fingers\r\nconst fingerJoints = {\r\n  thumb: [0, 1, 2, 3, 4],\r\n  indexFinger: [0, 5, 6, 7, 8],\r\n  middleFinger: [0, 9, 10, 11, 12],\r\n  ringFinger: [0, 13, 14, 15, 16],\r\n  pinky: [0, 17, 18, 19, 20],\r\n};\r\n\r\n//drawing function\r\nexport const drawHand = (predictions, ctx) =>{\r\n  //Check if we have predictions\r\n  if(predictions.length>0){\r\n    //loop through each prediction\r\n    predictions.forEach((prediction) => {\r\n      //grab landmarks\r\n      const landmarks = prediction.landmarks;\r\n\r\n      // Loop through fingers\r\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n        let finger = Object.keys(fingerJoints)[j];\r\n        //  Loop through pairs of joints\r\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n          // Get pairs of joints\r\n          const firstJointIndex = fingerJoints[finger][k];\r\n          const secondJointIndex = fingerJoints[finger][k + 1];\r\n\r\n           // Draw path\r\n          ctx.beginPath();\r\n          ctx.moveTo(\r\n            landmarks[firstJointIndex][0],\r\n            landmarks[firstJointIndex][1]\r\n          );\r\n          ctx.lineTo(\r\n            landmarks[secondJointIndex][0],\r\n            landmarks[secondJointIndex][1]\r\n          );\r\n          ctx.strokeStyle = \"plum\";\r\n          ctx.lineWidth = 4;\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n\r\n      //Loop through landmarks and draw em\r\n      for(let i=0; i<landmarks.length; i++){\r\n        //Get x points\r\n        const x = landmarks[i][0];\r\n        //Get y points\r\n        const y = landmarks[i][1];\r\n        //start drawing\r\n        ctx.beginPath();\r\n        ctx.arc(x,y,5,0,3* Math.PI);\r\n\r\n        //set line color\r\n        ctx.fillStyle = \"aqua\";\r\n        ctx.fill();\r\n      }\r\n    });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}